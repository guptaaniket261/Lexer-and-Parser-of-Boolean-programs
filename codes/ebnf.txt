program   ::= {statement} .
statement ::= formula ";" .
formula   ::= "IF" formula "THEN" formula "ELSE" formula
            | formula "IMPLIES" formula
            | formula "AND" formula
            | formula "XOR" formula
            | formula "OR" formula
            | formula "EQUALS" formula
            | "NOT" formula
            | ID
            | CONST
            | "(" formula ")" .
ID        ::= alpha{alpha} .
CONST     ::= "TRUE" | "FALSE" . 
alpha     ::= "A"|"B"|"C"|"D"|"E"|"F"|"G"|"H"|"I"|"J"|"K"|"L"|"M"|"N"|"O"|"P"|"Q"|"R"|"S"|"T"|"U"|"V"|"W"|"X"|"Y"|"Z"
            |"a"|"b"|"c"|"d"|"e"|"f"|"g"|"h"|"i"|"j"|"k"|"l"|"m"|"n"|"o"|"p"|"q"|"r"|"s"|"t"|"u"|"v"|"w"|"x"|"y"|"z" .



============================================================================================================================================================================


important note - The above grammar is ambiguous. It does not specify the precedence order or associativity rules. 
                Ml-yacc resolves these on explicitly declaring the precedence and associativity order.

                I have also written another grammar which is less ambiguous than the above but it still generates reduce-reduce conflicts due to IF THEN ELSE statement.
                But it clearly specifies the precedence and associativity of other operations.
                
                

=============================================================================================================================================================================


program   ::= {statement} .
statement ::= formula ";" .
formula   ::= "IF" formula "THEN" formula "ELSE" formula
            | formulaX "IMPLIES" formula
            | formulaX .
formulaX  ::= formulaX binop formulaY
            | formulaY .
formulaY  ::= "NOT" formulaY | formulaZ . 
formulaZ  ::= ID | CONST | "(" formula ")" | formula .
binop     ::= "AND" | "OR" | "XOR" | "EQUALS" .
ID        ::= alpha{alpha} .
CONST     ::= "TRUE" | "FALSE" . 
alpha     ::= "A"|"B"|"C"|"D"|"E"|"F"|"G"|"H"|"I"|"J"|"K"|"L"|"M"|"N"|"O"|"P"|"Q"|"R"|"S"|"T"|"U"|"V"|"W"|"X"|"Y"|"Z"
            |"a"|"b"|"c"|"d"|"e"|"f"|"g"|"h"|"i"|"j"|"k"|"l"|"m"|"n"|"o"|"p"|"q"|"r"|"s"|"t"|"u"|"v"|"w"|"x"|"y"|"z" .



  

